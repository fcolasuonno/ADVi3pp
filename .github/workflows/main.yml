name: SketchTool Export Assets

on:
  workflow_dispatch:
  push:
    paths:
    - '**.sketch'

jobs:
  assets:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v1
    - name: Bump the workspace version
      id: tag_version
      uses: mathieudutour/github-tag-action@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        default_bump: patch
    - name: Download & Install Sketch
      run: |
        curl -OL https://sketch.com/download/sketch.zip
        unzip sketch.zip
    - name: Create output directory
      run: mkdir -p "LCD-Panel/Sketch-Export"
    - name: Run SketchTool
      run: Sketch.app/Contents/Resources/sketchtool/bin/sketchtool export artboards --output="LCD-Panel/Sketch-Export" --overwriting=YES "LCD-Panel/Masters/ADVi3++5 LCD-Panel.sketch"
    - name: Install imagemagic
      run: brew install imagemagick
    - name: Convert images
      run: |
        function convert_images() {
            mkdir -p "$2"
            echo "Convert images from $1 to 24 bit BMP and copy them into $2..."
            for f in "$1/"*.png ; do
                filename=$(basename "$f")
                name="${filename%.*}"
                echo Convert "${name}"
                convert "$f" -type truecolor "BMP3:$2/${name}.bmp"
                ret=$?; if [[ $ret != 0 ]]; then exit $ret; fi
            done
        }
        convert_images "LCD-Panel/Sketch-Export/DWIN_SET"   "LCD-Panel/DGUS-root/DWIN_SET"
        convert_images "LCD-Panel/Sketch-Export/Controls"   "LCD-Panel/DGUS-root/25_Controls"
    - name: ZIP Assets
      run: zip -r assets.zip "LCD-Panel/DGUS-root/"
    - name: Create a GitHub release
      id: create_release
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag_version.outputs.new_tag }}
        release_name: Release ${{ steps.tag_version.outputs.new_tag }}
        draft: "false"
        prerelease: "false"
    - name: Publish the assets file to the release
      uses: actions/upload-release-asset@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: assets.zip
        asset_name: assets.zip
        asset_content_type: application/zip
